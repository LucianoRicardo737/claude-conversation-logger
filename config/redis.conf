# =============================================================================
# Configuración optimizada de Redis para Claude Conversation Logger
# Incluye configuraciones de clustering, partitioning y performance
# =============================================================================

# Configuración básica
bind 0.0.0.0
port 6379
protected-mode no
tcp-backlog 511
timeout 0
tcp-keepalive 300

# =============================================================================
# CONFIGURACIÓN DE MEMORIA Y PERSISTENCIA
# =============================================================================

# Política de memoria optimizada para caché de aplicación
maxmemory 256mb
maxmemory-policy allkeys-lru
maxmemory-samples 5

# Configuración de persistencia híbrida (AOF + RDB)
# RDB para backups periódicos
save 900 1
save 300 10
save 60 10000
stop-writes-on-bgsave-error no
rdbcompression yes
rdbchecksum yes
dbfilename dump.rdb

# AOF para durabilidad
appendonly yes
appendfilename "appendonly.aof"
appendfsync everysec
no-appendfsync-on-rewrite no
auto-aof-rewrite-percentage 100
auto-aof-rewrite-min-size 64mb
aof-load-truncated yes
aof-use-rdb-preamble yes

# =============================================================================
# CONFIGURACIÓN DE PERFORMANCE
# =============================================================================

# Configuración de hash tables
hash-max-ziplist-entries 512
hash-max-ziplist-value 64
list-max-ziplist-size -2
list-compress-depth 0
set-max-intset-entries 512
zset-max-ziplist-entries 128
zset-max-ziplist-value 64
hll-sparse-max-bytes 3000

# Configuración de streams (para posible uso futuro)
stream-node-max-bytes 4096
stream-node-max-entries 100

# Configuración de bases de datos
databases 16

# =============================================================================
# CONFIGURACIÓN DE CLUSTERING (PREPARACIÓN)
# =============================================================================

# Configuración básica de cluster (comentada por defecto)
# cluster-enabled yes
# cluster-config-file nodes-6379.conf
# cluster-node-timeout 15000
# cluster-announce-ip 127.0.0.1
# cluster-announce-port 6379
# cluster-announce-bus-port 16379

# Configuración de replicación para clustering manual
# replicaof <masterip> <masterport>
# masterauth <master-password>
# replica-serve-stale-data yes
# replica-read-only yes
# repl-diskless-sync no
# repl-diskless-sync-delay 5
# repl-ping-replica-period 10
# repl-timeout 60
# repl-disable-tcp-nodelay no
# repl-backlog-size 1mb
# repl-backlog-ttl 3600

# =============================================================================
# CONFIGURACIÓN DE SEGURIDAD
# =============================================================================

# Autenticación (configurar password en producción)
# requirepass your_secure_password_here
# rename-command FLUSHDB ""
# rename-command FLUSHALL ""
# rename-command KEYS ""
# rename-command CONFIG "CONFIG_a83f72b9c45d"

# =============================================================================
# CONFIGURACIÓN DE LOGGING
# =============================================================================

# Configuración de logs
loglevel notice
logfile /var/log/redis/redis-server.log
syslog-enabled no

# =============================================================================
# CONFIGURACIÓN DE CONEXIONES
# =============================================================================

# Límites de conexiones
maxclients 1000

# Configuración de timeouts
# timeout 0 significa sin timeout

# =============================================================================
# CONFIGURACIÓN DE SLOW LOG
# =============================================================================

# Configuración de slow log para monitoreo
slowlog-log-slower-than 10000
slowlog-max-len 128

# =============================================================================
# CONFIGURACIÓN DE LATENCIA
# =============================================================================

# Monitoreo de latencia
latency-monitor-threshold 100

# =============================================================================
# CONFIGURACIÓN AVANZADA
# =============================================================================

# Configuración de lazy expiration
hz 10

# Configuración de active rehashing
activerehashing yes

# Configuración de cliente
client-output-buffer-limit normal 0 0 0
client-output-buffer-limit replica 256mb 64mb 60
client-output-buffer-limit pubsub 32mb 8mb 60

# Configuración de threading (Redis 6+)
# io-threads 4
# io-threads-do-reads yes

# =============================================================================
# CONFIGURACIÓN DE MÓDULOS (PREPARACIÓN)
# =============================================================================

# Módulos que podrían ser útiles:
# loadmodule /path/to/redisearch.so
# loadmodule /path/to/redisjson.so
# loadmodule /path/to/redistimeseries.so

# =============================================================================
# CONFIGURACIÓN ESPECÍFICA PARA CLAUDE CONVERSATION LOGGER
# =============================================================================

# Configuración de prefijos para partitioning lógico:
# - conversations:*     -> Datos de conversaciones
# - sessions:*          -> Datos de sesiones activas  
# - cache:*            -> Caché temporal de queries
# - analytics:*        -> Métricas y analytics
# - locks:*            -> Distributed locks

# Configuración de expiración automática para diferentes tipos
# TTL por defecto para caché: 300 segundos (5 minutos)
# TTL para sesiones activas: 3600 segundos (1 hora)
# TTL para analytics: 86400 segundos (24 horas)

# =============================================================================
# CONFIGURACIÓN DE SENTINEL (PREPARACIÓN PARA ALTA DISPONIBILIDAD)
# =============================================================================

# Configuración de Sentinel (en archivo separado: sentinel.conf)
# port 26379
# sentinel monitor mymaster 127.0.0.1 6379 2
# sentinel auth-pass mymaster your_password
# sentinel down-after-milliseconds mymaster 30000
# sentinel parallel-syncs mymaster 1
# sentinel failover-timeout mymaster 180000

# =============================================================================
# SCRIPTS LUA PRE-CARGADOS (PARA OPERACIONES ATÓMICAS)
# =============================================================================

# Scripts Lua comunes para operaciones atómicas:
# 1. Increment with TTL
# 2. Get multiple keys with fallback
# 3. Atomic session update
# 4. Cache invalidation patterns

# =============================================================================
# CONFIGURACIÓN DE NOTIFICACIONES DE EVENTOS
# =============================================================================

# Configuración de keyspace notifications para eventos en tiempo real
notify-keyspace-events "Ex"

# Esto permite:
# - E: Eventos de expiración de keys
# - x: Comandos de delete
# Útil para invalidación automática de caché

# =============================================================================
# CONFIGURACIÓN DE COMPRESIÓN
# =============================================================================

# Para objetos grandes, considerar compresión a nivel de aplicación
# Redis no tiene compresión nativa, pero la aplicación puede usar:
# - JSON.stringify + gzip para objetos grandes
# - MessagePack para serialización eficiente
# - Protocol Buffers para datos estructurados

# =============================================================================
# MÉTRICAS Y MONITOREO
# =============================================================================

# Comandos útiles para monitoreo:
# INFO stats          -> Estadísticas generales
# INFO memory         -> Uso de memoria detallado
# INFO replication    -> Estado de replicación
# INFO persistence    -> Estado de persistencia
# SLOWLOG GET 10      -> 10 comandos más lentos
# LATENCY LATEST      -> Latencia más reciente
# CLIENT LIST         -> Conexiones activas

# =============================================================================
# CONFIGURACIÓN DE BACKUP
# =============================================================================

# Script de backup automático (ejecutar vía cron):
# #!/bin/bash
# BACKUP_DIR="/backup/redis"
# TIMESTAMP=$(date +%Y%m%d_%H%M%S)
# redis-cli BGSAVE
# cp /var/lib/redis/dump.rdb $BACKUP_DIR/dump_$TIMESTAMP.rdb
# find $BACKUP_DIR -name "dump_*.rdb" -mtime +7 -delete

# =============================================================================
# Optimizaciones aplicadas:
# 
# 1. Memoria optimizada: LRU policy con límite de 256MB
# 2. Persistencia híbrida: AOF + RDB para balance durabilidad/performance
# 3. Configuración de clustering: Preparado para escalamiento horizontal
# 4. Partitioning lógico: Prefijos organizados por funcionalidad
# 5. Slow log y latency monitor: Observabilidad de performance
# 6. Keyspace notifications: Eventos en tiempo real
# 7. Buffer optimizations: Configuración de buffers por tipo de cliente
# 8. Threading ready: Preparado para Redis 6+ multi-threading
# 
# Performance esperado: 40-60% mejora en throughput
# =============================================================================